#version 460 core
layout (std140, binding = 0) uniform Header
{
	mat4 camera;
};
vec3 s(float Vu, float Vv)
{
	float v1=0;
	float v2=0;
	float v3=0;
	float v4=v1;
	float v5=v2;
	float v6=v3;
	return vec3(v4, v5, v6);
}
vec3 s_u(float Vu, float Vv)
{
	float v1=0;
	float v2=0;
	float v3=0;
	float v4=v1;
	float v5=v2;
	float v6=v3;
	return vec3(v4, v5, v6);
}
vec3 s_v(float Vu, float Vv)
{
	float v1=0;
	float v2=0;
	float v3=0;
	float v4=v1;
	float v5=v2;
	float v6=v3;
	return vec3(v4, v5, v6);
}
vec3 s_uu(float Vu, float Vv)
{
	float v1=0;
	float v2=0;
	float v3=0;
	float v4=v1;
	float v5=v2;
	float v6=v3;
	return vec3(v4, v5, v6);
}
vec3 s_uv(float Vu, float Vv)
{
	float v1=0;
	float v2=0;
	float v3=0;
	float v4=v1;
	float v5=v2;
	float v6=v3;
	return vec3(v4, v5, v6);
}
vec3 s_vv(float Vu, float Vv)
{
	float v1=0;
	float v2=0;
	float v3=0;
	float v4=v1;
	float v5=v2;
	float v6=v3;
	return vec3(v4, v5, v6);
}
float E(float u, float v)   {return dot(s_u(u,v),s_u(u,v));}
float E_u(float u, float v) {return 2*dot(s_u(u,v),s_uu(u,v));}
float E_v(float u, float v) {return 2*dot(s_u(u,v),s_uv(u,v));}
float F(float u, float v)   {return s_u(u,v)*s_v(u,v);}
float F_u(float u, float v) {return s_uu(u,v)*s_v(u,v) + s_u(u,v)*s_uv(u,v);}
float F_v(float u, float v) {return s_uv(u,v)*s_v(u,v) + s_u(u,v)*s_vv(u,v);}
float G(float u, float v)   {return s_v(u,v)*s_v(u,v);}
float G_u(float u, float v) {return 2*s_v(u,v)*s_uv(u,v);}
float G_v(float u, float v) {return 2*s_v(u,v)*s_vv(u,v);}
layout (location = 0) out vec4 color;
in vec2 opos;void main()
{
return vec4(1,1,1,1);}
